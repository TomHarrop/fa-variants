#!/usr/bin/env bash

queue_jar="bin/Queue-3.6/Queue.jar"

printf "[ %s: Call variants ]\n" "$(date)"

source "src/sh/bash_header"
source "src/sh/io_parser"

# make outdir
outdir="$(dirname "${output_vcf}")"
if [[ ! -d "${outdir}" ]]; then
    mkdir -p "${outdir}"
fi
bn="$(basename "${input_bam}" ".split.bam")"
log_file="${outdir}/${bn}.HaplotypeCaller.log"
job_name="${bn}_HaplotypeCaller"

# make temporary directories for scattergather
temp_dir="$(mktemp -d -t "${bn}.queue_temp.XXXXXXXXXX")"
job_sg_dir="$(mktemp -d -t "${bn}.queue_sg.XXXXXXXXXX")"

# build command
cmd=( java -jar "${queue_jar}" -disableJobReport -jobRunner Drmaa
      -jobNative "-n 2 -J ${job_name}" -log "${log_file}"
      -tempDir "${temp_dir}" -jobSGDir "${job_sg_dir}"
      -S "src/scala/ScatterHaplotypeCaller.scala"
      -R "${input_fa}" -L "${input_bed}" -I "${input_bam}" 
      -out "${output_vcf}" -run )

shopt -s extglob
printf "Final command line: "
printf "%s " "${cmd[@]//+([[:blank:]])/ }"
printf "\n"
shopt -u extglob

# run HaplotypeCaller
"${cmd[@]}" &

printf "[ %s: Waiting for HaplotypeCaller to finish ]\n" "$(date)"
FAIL=0
fail_wait

# tidy up temporary directories
rm -r "${temp_dir}" "${job_sg_dir}"

# log metadata
metadata_file="${outdir}/call_variants.METADATA.csv"

printf "[ %s: Logging metadata ]\n" "$(date)"
printf "metadata_file: %s\n" "${metadata_file}"
cat <<- _EOF_ > "${metadata_file}"
    Script,${0}
    branch,$(git rev-parse --abbrev-ref HEAD)
    hash,$(git rev-parse HEAD)
    date,$(date +%F)
    gatk-queue version,$(java -jar bin/Queue-3.6/Queue.jar \
                         --version 2>&1 | head -n 1)
    output,${outdir}
_EOF_

printf "[ %s: Done ]\n" "$(date)"

exit 0
